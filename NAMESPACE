useDynLib(terra, .registration=TRUE)
import(methods, Rcpp, raster)
importFrom(grDevices, topo.colors)

exportMethods("[", "[[", "==", "!=", "!", adjacent, aggregate, align, app, area, Arith, as.contour, as.lines, as.points, as.polygons, as.array, as.data.frame, as.factor, as.list, as.logical, as.matrix, atan2, bbox, boundaries, buffer, clamp, classify, cells, cellFromXY, cellFromRowCol, cellFromRowColCombine, click, colFromX, colFromCell, Compare, compareGeom, contour, cover, crop, crs, "crs<-", density, depth, "depth<-", diff, disaggregate, distance, draw, ext, extend, extract, flip, focal, freq, geom, geomtype, global, hasValues, hist, head, ifel, init, interpolate, image, isLonLat, isTRUE, isFALSE, is.factor, is.lines, is.points, is.polygons, lapp, levels, lines, Logic, mask, Math, Math2, minmax, mean, median, merge, modal, ncell, ncol, "ncol<-", nlyr, nrow, "nrow<-", nsrc, origin, pack, pairs, perimeter, persp, plot, plotRGB, predict, project, points, quantile, rapp, rast, rasterize, rats, readStart, readStop, readValues, rectify, res, "res<-", resample, rotate, rowFromY, rowColFromCell, rowFromCell, sds, select, selectRange, setMinMax, setValues, size, shift, slope, sources, spatSample, stdev, summary, Summary, subset, t, tail, tapp, time, "time<-", text, transpose, trim, unique, vect, values, "values<-", which.min, which.max, writeRaster, writeStart, writeStop, writeVector, writeValues, xmin, xmax, xres, xFromCol, xyFromCell, xFromCell, ymin, ymax, yres, yFromCell, yFromRow, zonal, zoom, "xmin<-", "xmax<-", "ymin<-", "ymax<-")

export(focalMat, gdal_info, gdal_version, sds_info, terraOptions, tmpFiles)

#exportPattern("^[[:alpha:]]+")
